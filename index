<!DOCTYPE html>
<html lang="en" class="h-full bg-gray-100">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Protected Application</title>
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .hidden-until-ready, .hidden { display: none !important; }
        .loader {
            border: 4px solid #f3f3f3; border-top: 4px solid #3498db;
            border-radius: 50%; width: 24px; height: 24px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    </style>
</head>
<body class="h-full m-0 p-0 overflow-hidden">

    <!-- Login Overlay -->
    <div id="login-overlay" class="fixed inset-0 z-50 flex items-center justify-center bg-gray-800 bg-opacity-75">
        <div class="w-full max-w-sm p-8 space-y-6 bg-white rounded-xl shadow-lg">
            
            <!-- Step 1: Email Form -->
            <form id="email-form" class="space-y-6">
                <div>
                    <h1 class="text-2xl font-bold text-center text-gray-800">Authentication</h1>
                    <p class="text-center text-gray-500">Enter your email to receive an OTP.</p>
                </div>
                <div>
                    <label for="email" class="text-sm font-medium text-gray-700">Email</label>
                    <input type="email" id="email" name="email" required class="w-full px-4 py-2 mt-2 text-base text-gray-700 bg-gray-100 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="you@example.com">
                </div>
                <div id="email-message" class="text-sm text-center font-medium"></div>
                <div>
                    <button type="submit" id="send-otp-button" class="w-full flex justify-center py-3 px-4 text-sm font-semibold text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:outline-none transition-colors">
                        <span id="send-otp-text">Send OTP</span>
                        <div id="send-otp-loader" class="loader hidden"></div>
                    </button>
                </div>
            </form>

            <!-- Step 2: OTP Form -->
            <form id="otp-form" class="space-y-6 hidden">
                <div>
                    <h1 class="text-2xl font-bold text-center text-gray-800">Enter OTP</h1>
                    <p class="text-center text-gray-500">We've sent a code to <strong id="user-email-display"></strong>.</p>
                </div>
                <div>
                    <label for="otp" class="text-sm font-medium text-gray-700">6-Digit OTP</label>
                    <input type="text" id="otp" name="otp" required pattern="\d{6}" maxlength="6" class="w-full px-4 py-2 mt-2 text-base text-center tracking-[1em] text-gray-700 bg-gray-100 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                <div id="otp-message" class="text-sm text-center font-medium"></div>
                <div>
                    <button type="submit" id="verify-otp-button" class="w-full flex justify-center py-3 px-4 text-sm font-semibold text-white bg-green-600 rounded-lg hover:bg-green-700 focus:outline-none transition-colors">
                        <span id="verify-otp-text">Verify OTP</span>
                        <div id="verify-otp-loader" class="loader hidden"></div>
                    </button>
                </div>
                 <div class="text-center">
                    <a href="#" id="go-back-link" class="text-sm text-blue-600 hover:underline">Use a different email</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Content Area -->
    <div id="content-area" class="fixed inset-0 w-full h-full z-30 hidden-until-ready">
        <button onclick="logout()" title="Logout" class="fixed bottom-4 right-4 z-40 flex items-center justify-center w-14 h-14 bg-red-600 text-white rounded-full shadow-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path></svg>
        </button>
        <iframe id="protected-iframe" class="w-full h-full border-none" src="about:blank"></iframe>
    </div>

    <script>
        // --- CONFIGURATION ---
        const SCRIPT_URL = "https://script.google.com/macros/s/AKfycbwyUw1nK5m9MtJyiLRdZBFnyydCJcBhNEFmZhuHPocF_ULE52lgZSjrU-ohK5lNCfh5Rw/exec";
        const PROTECTED_APP_URL = "https://script.google.com/macros/s/AKfycbxBpg6cyZm0SKkHvDMDqKETSB3eNysp6dgY6Yj5fx_QRXQiHmrEKG60hTFFecWg78Q/exec";
        // ---------------------

        const loginOverlay = document.getElementById('login-overlay');
        const contentArea = document.getElementById('content-area');
        const protectedIframe = document.getElementById('protected-iframe');

        const emailForm = document.getElementById('email-form');
        const otpForm = document.getElementById('otp-form');
        
        const emailMessage = document.getElementById('email-message');
        const otpMessage = document.getElementById('otp-message');

        const sendOtpButton = document.getElementById('send-otp-button');
        const verifyOtpButton = document.getElementById('verify-otp-button');
        
        const goBackLink = document.getElementById('go-back-link');

        let userEmail = '';

        document.addEventListener('DOMContentLoaded', () => {
            if (sessionStorage.getItem('isLoggedIn') === 'true') {
                showContent();
            } else {
                showLogin();
            }
        });

        function showContent() {
            loginOverlay.classList.add('hidden');
            contentArea.classList.remove('hidden-until-ready');
            
            const bodyChildren = document.body.children;
            for (const child of bodyChildren) {
                if (child.id !== 'content-area' && child.id !== 'login-overlay' && child.tagName.toLowerCase() !== 'script') {
                    child.style.display = 'none';
                }
            }

            if (PROTECTED_APP_URL === "YOUR_PROTECTED_WEB_APP_URL_HERE" || !PROTECTED_APP_URL.startsWith('http')) {
                document.body.innerHTML = `<div class="w-full h-full flex items-center justify-center text-center text-red-600 bg-white font-bold p-4">Error: Please set a valid 'PROTECTED_APP_URL' in the script.</div>`;
                return;
            }
            if (protectedIframe.src === 'about:blank') {
                protectedIframe.src = PROTECTED_APP_URL;
            }
        }
        
        function showLogin() {
            loginOverlay.classList.remove('hidden');
            contentArea.classList.add('hidden-until-ready');
            switchToEmailStep();
        }
        
        function switchToEmailStep() {
            otpForm.classList.add('hidden');
            emailForm.classList.remove('hidden');
            emailForm.email.focus();
        }

        function switchToOtpStep() {
            emailForm.classList.add('hidden');
            otpForm.classList.remove('hidden');
            document.getElementById('user-email-display').textContent = userEmail;
            otpForm.otp.focus();
        }
        
        emailForm.addEventListener('submit', (e) => {
            e.preventDefault();
            userEmail = emailForm.email.value.trim();
            if (SCRIPT_URL === "YOUR_NEW_WEB_APP_URL_HERE" || !SCRIPT_URL.startsWith('http')) {
                showMessage('email', "Error: Please set a valid SCRIPT_URL in the HTML.", "error");
                return;
            }
            setLoading('send-otp', true);
            makeJsonpRequest({ action: 'send_otp', email: userEmail }, handleSendOtpResponse);
        });

        otpForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const otp = otpForm.otp.value.trim();
            setLoading('verify-otp', true);
            makeJsonpRequest({ action: 'verify_otp', email: userEmail, otp: otp }, handleVerifyOtpResponse);
        });
        
        goBackLink.addEventListener('click', (e) => {
            e.preventDefault();
            switchToEmailStep();
            emailMessage.textContent = '';
            otpMessage.textContent = '';
        });

        function handleSendOtpResponse(response) {
            setLoading('send-otp', false);
            if (response.status === "success") {
                showMessage('email', response.message, 'success');
                setTimeout(switchToOtpStep, 500);
            } else {
                showMessage('email', response.message, 'error');
            }
        }

        function handleVerifyOtpResponse(response) {
            setLoading('verify-otp', false);
            if (response.status === "success") {
                showMessage('otp', "Login successful!", 'success');
                sessionStorage.setItem('isLoggedIn', 'true');
                setTimeout(showContent, 500);
            } else {
                showMessage('otp', response.message, 'error');
            }
        }

        function makeJsonpRequest(params, callback) {
            const callbackName = 'jsonpCallback_' + Math.round(100000 * Math.random());
            window[callbackName] = function(data) {
                document.body.removeChild(scriptTag);
                delete window[callbackName];
                callback(data);
            };

            const queryString = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');
            const scriptTag = document.createElement('script');
            scriptTag.src = `${SCRIPT_URL}?${queryString}&callback=${callbackName}`;
            
            scriptTag.onerror = () => {
                delete window[callbackName];
                document.body.removeChild(scriptTag);
                const formType = params.action === 'send_otp' ? 'email' : 'otp';
                showMessage(formType, "Error: Could not connect to the authentication service.", "error");
                setLoading('send-otp', false); setLoading('verify-otp', false);
            };

            document.body.appendChild(scriptTag);
        }

        function logout() {
            sessionStorage.removeItem('isLoggedIn');
            location.reload();
        }

        function setLoading(type, isLoading) {
            const button = document.getElementById(`${type}-button`);
            const text = document.getElementById(`${type}-text`);
            const loader = document.getElementById(`${type}-loader`);
            if (isLoading) {
                text.classList.add('hidden');
                loader.classList.remove('hidden');
                button.disabled = true;
            } else {
                text.classList.remove('hidden');
                loader.classList.add('hidden');
                button.disabled = false;
            }
        }

        function showMessage(formType, msg, type) {
            const div = formType === 'email' ? emailMessage : otpMessage;
            div.textContent = msg;
            div.className = type === 'error' ? 'text-sm text-center text-red-500 font-medium' : 'text-sm text-center text-green-500 font-medium';
        }
    </script>
</body>
</html>

